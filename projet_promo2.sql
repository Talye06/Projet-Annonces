-- MySQL Script generated by MySQL Workbench
-- Thu Apr 27 16:50:42 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema projet_annonces
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `projet_annonces` ;

-- -----------------------------------------------------
-- Schema projet_annonces
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `projet_annonces` DEFAULT CHARACTER SET utf8 ;
USE `projet_annonces` ;

-- -----------------------------------------------------
-- Table `projet_annonces`.`Membres`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `projet_annonces`.`Membres` ;

CREATE TABLE IF NOT EXISTS `projet_annonces`.`Membres` (
  `id_membre` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `is_admin` TINYINT NOT NULL DEFAULT 0,
  `username` VARCHAR(150) NOT NULL,
  `email` VARCHAR(250) NOT NULL,
  `hash` VARCHAR(250) NOT NULL,
  `nom` VARCHAR(150) NULL DEFAULT NULL,
  `prenom` VARCHAR(150) NULL DEFAULT NULL,
  `date_naissance` DATE NULL DEFAULT NULL,
  `num_telephone` VARCHAR(20) NULL DEFAULT NULL,
  `adresse_postale` VARCHAR(250) NULL DEFAULT NULL,
  `code_postal` INT NULL DEFAULT NULL,
  `ville` VARCHAR(150) NULL DEFAULT NULL,
  `date_inscription` DATETIME NOT NULL DEFAULT NOW(),
  `token` VARCHAR(250) NULL DEFAULT NULL,
  `date_validite_token` DATETIME NULL DEFAULT NULL,
  `solde_cagnotte` FLOAT UNSIGNED NULL,
  PRIMARY KEY (`id_membre`));


-- -----------------------------------------------------
-- Table `projet_annonces`.`Categories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `projet_annonces`.`Categories` ;

CREATE TABLE IF NOT EXISTS `projet_annonces`.`Categories` (
  `id_categorie` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nom_categorie` VARCHAR(150) NULL DEFAULT NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id_categorie`));


-- -----------------------------------------------------
-- Table `projet_annonces`.`Etats`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `projet_annonces`.`Etats` ;

CREATE TABLE IF NOT EXISTS `projet_annonces`.`Etats` (
  `id_etat` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `libelle_etat` VARCHAR(50) NULL DEFAULT NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id_etat`));


-- -----------------------------------------------------
-- Table `projet_annonces`.`Annonces`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `projet_annonces`.`Annonces` ;

CREATE TABLE IF NOT EXISTS `projet_annonces`.`Annonces` (
  `id_annonce` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `date_creation` DATETIME NOT NULL DEFAULT NOW(),
  `titre` VARCHAR(150) NOT NULL,
  `description` TEXT NOT NULL,
  `duree_de_publication` INT NOT NULL,
  `prix_vente` DOUBLE NULL DEFAULT NULL,
  `cout_annonce` DOUBLE NULL DEFAULT NULL,
  `date_validation` DATETIME NULL DEFAULT NULL,
  `date_fin_publication` DATETIME NULL DEFAULT NULL,
  `id_etat` INT UNSIGNED NOT NULL,
  `id_utilisateur` INT UNSIGNED NOT NULL,
  `date_vente` DATETIME NULL DEFAULT NULL,
  `id_acheteur` INT UNSIGNED NULL DEFAULT NULL,
  PRIMARY KEY (`id_annonce`),
  CONSTRAINT `FK2`
    FOREIGN KEY (`id_etat`)
    REFERENCES `projet_annonces`.`Etats` (`id_etat`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK3`
    FOREIGN KEY (`id_utilisateur`)
    REFERENCES `projet_annonces`.`Membres` (`id_membre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Annonces_Utilisateur1`
    FOREIGN KEY (`id_acheteur`)
    REFERENCES `projet_annonces`.`Membres` (`id_membre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `projet_annonces`.`Photos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `projet_annonces`.`Photos` ;

CREATE TABLE IF NOT EXISTS `projet_annonces`.`Photos` (
  `id_photo` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `url_photo` VARCHAR(250) NOT NULL,
  `is_main_photo` TINYINT NULL DEFAULT 0,
  `id_annonce` INT UNSIGNED NOT NULL,
  `legende` VARCHAR(150) NULL,
  PRIMARY KEY (`id_photo`),
  CONSTRAINT `FKphotos`
    FOREIGN KEY (`id_annonce`)
    REFERENCES `projet_annonces`.`Annonces` (`id_annonce`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `projet_annonces`.`Categories_Annonces`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `projet_annonces`.`Categories_Annonces` ;

CREATE TABLE IF NOT EXISTS `projet_annonces`.`Categories_Annonces` (
  `id_annonce` INT UNSIGNED NOT NULL,
  `id_categorie` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_annonce`, `id_categorie`),
  CONSTRAINT `FKcatann1`
    FOREIGN KEY (`id_annonce`)
    REFERENCES `projet_annonces`.`Annonces` (`id_annonce`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FKcatann2`
    FOREIGN KEY (`id_categorie`)
    REFERENCES `projet_annonces`.`Categories` (`id_categorie`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `projet_annonces`.`Transactions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `projet_annonces`.`Transactions` ;

CREATE TABLE IF NOT EXISTS `projet_annonces`.`Transactions` (
  `id_transaction` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `num_operation` VARCHAR(100) NOT NULL,
  `somme` FLOAT NOT NULL,
  `date` DATETIME NOT NULL,
  `id_utilisateur` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_transaction`),
  CONSTRAINT `fk_Transactions_Utilisateurs1`
    FOREIGN KEY (`id_utilisateur`)
    REFERENCES `projet_annonces`.`Membres` (`id_membre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
